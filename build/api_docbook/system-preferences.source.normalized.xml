<?xml version="1.0" encoding="UTF-8"?>
<file>
   <object title="systemPreferences">
      <methods>
         <method name="isDarkMode">
            <returns type="Boolean">
               <description>
                  <para>- Whether the system is in Dark Mode.</para>
               </description>
            </returns>
            <description/>
         </method>
         <method name="isSwipeTrackingFromScrollEventsEnabled">
            <returns type="Boolean">
               <description>
                  <para>- Whether the Swipe between pages setting is on.</para>
               </description>
            </returns>
            <description/>
         </method>
         <method name="postNotification">
            <param name="event" type="String"/>
            <param name="userInfo" type="Object"/>
            <description>
               <para>Posts event as native notifications of macOS. The userInfo is an Object that contains the user information dictionary sent along with the notification.</para>
            </description>
         </method>
         <method name="postLocalNotification">
            <param name="event" type="String"/>
            <param name="userInfo" type="Object"/>
            <description>
               <para>Posts event as native notifications of macOS. The userInfo is an Object that contains the user information dictionary sent along with the notification.</para>
            </description>
         </method>
         <method name="subscribeNotification">
            <param name="event" type="String"/>
            <param name="callback" type="Function">
               <param name="event" type="String"/>
               <param name="userInfo" type="Object"/>
            </param>
            <description>
               <para>Subscribes to native notifications of macOS, callback will be called with callback(event, userInfo) when the corresponding event happens. The userInfo is an Object that contains the user information dictionary sent along with the notification.</para>
               <para>The id of the subscriber is returned, which can be used to unsubscribe the event.</para>
               <para>Under the hood this API subscribes to NSDistributedNotificationCenter, example values of event are:</para>
               <list>
                  <item>
                     <para>AppleInterfaceThemeChangedNotification</para>
                  </item>
                  <item>
                     <para>AppleAquaColorVariantChanged</para>
                  </item>
                  <item>
                     <para>AppleColorPreferencesChangedNotification</para>
                  </item>
                  <item>
                     <para>AppleShowScrollBarsSettingChanged</para>
                  </item>
               </list>
            </description>
         </method>
         <method name="unsubscribeNotification">
            <param name="id" type="Integer"/>
            <description>
               <para>Removes the subscriber with id.</para>
            </description>
         </method>
         <method name="subscribeLocalNotification">
            <param name="event" type="String"/>
            <param name="callback" type="Function">
               <param name="event" type="String"/>
               <param name="userInfo" type="Object"/>
            </param>
            <description>
               <para>Same as subscribeNotification, but uses NSNotificationCenter for local defaults. This is necessary for events such as NSUserDefaultsDidChangeNotification</para>
            </description>
         </method>
         <method name="unsubscribeLocalNotification">
            <param name="id" type="Integer"/>
            <description>
               <para>Same as unsubscribeNotification, but removes the subscriber from NSNotificationCenter.</para>
            </description>
         </method>
         <method name="getUserDefault">
            <param name="key" type="String"/>
            <param name="type" type="String"/>
            <description>
               <para>Get the value of key in system preferences.</para>
               <para>This API uses NSUserDefaults on macOS. Some popular key and types are:</para>
               <list>
                  <item>
                     <para>AppleInterfaceStyle: string</para>
                  </item>
                  <item>
                     <para>AppleAquaColorVariant: integer</para>
                  </item>
                  <item>
                     <para>AppleHighlightColor: string</para>
                  </item>
                  <item>
                     <para>AppleShowScrollBars: string</para>
                  </item>
                  <item>
                     <para>NSNavRecentPlaces: array</para>
                  </item>
                  <item>
                     <para>NSPreferredWebServices: dictionary</para>
                  </item>
                  <item>
                     <para>NSUserDictionaryReplacementItems: array</para>
                  </item>
               </list>
            </description>
         </method>
         <method name="setUserDefault">
            <param name="key" type="String"/>
            <param name="type" type="String"/>
            <param name="value" type="String"/>
            <description>
               <para>Set the value of key in system preferences.</para>
               <para>Note that type should match actual type of value. An exception is thrown if they don't.</para>
               <para>This API uses NSUserDefaults on macOS. Some popular key and types are:</para>
               <list>
                  <item>
                     <para>ApplePressAndHoldEnabled: boolean</para>
                  </item>
               </list>
            </description>
         </method>
         <method name="isAeroGlassEnabled">
            <description>
               <para>This method returns true if DWM composition (Aero Glass) is enabled, and false otherwise.</para>
               <para>An example of using it to determine if you should create a transparent window or not (transparent windows won't work correctly when DWM composition is disabled):</para>
               <programlisting language="javascript">
const {BrowserWindow, systemPreferences} = require('electron')
let browserOptions = {width: 1000, height: 800}

// Make the window transparent only if the platform supports it.
if (process.platform !== 'win32' || systemPreferences.isAeroGlassEnabled()) {
  browserOptions.transparent = true
  browserOptions.frame = false
}

// Create the window.
let win = new BrowserWindow(browserOptions)

// Navigate.
if (browserOptions.transparent) {
  win.loadURL(`file://${__dirname}/index.html`)
} else {
  // No transparency, so we load a fallback that uses basic styles.
  win.loadURL(`file://${__dirname}/fallback.html`)
}
</programlisting>
            </description>
         </method>
         <method name="getAccentColor">
            <returns type="String">
               <description>
                  <para>- The users current system wide accent color preference in RGBA hexadecimal form.</para>
               </description>
            </returns>
            <description>
               <programlisting language="javascript">
const color = systemPreferences.getAccentColor() // `"aabbccdd"`
const red = color.substr(0, 2) // "aa"
const green = color.substr(2, 2) // "bb"
const blue = color.substr(4, 2) // "cc"
const alpha = color.substr(6, 2) // "dd"
</programlisting>
            </description>
         </method>
         <method name="getColor">
            <param name="color" type="String">
               <param name="3d-dark-shadow"/>
               <param name="3d-face"/>
               <param name="3d-highlight"/>
               <param name="3d-light"/>
               <param name="3d-shadow"/>
               <param name="active-border"/>
               <param name="active-caption"/>
               <param name="active-caption-gradient"/>
               <param name="app-workspace"/>
               <param name="button-text"/>
               <param name="caption-text"/>
               <param name="desktop"/>
               <param name="disabled-text"/>
               <param name="highlight"/>
               <param name="highlight-text"/>
               <param name="hotlight"/>
               <param name="inactive-border"/>
               <param name="inactive-caption"/>
               <param name="inactive-caption-gradient"/>
               <param name="inactive-caption-text"/>
               <param name="info-background"/>
               <param name="info-text"/>
               <param name="menu"/>
               <param name="menu-highlight"/>
               <param name="menubar"/>
               <param name="menu-text"/>
               <param name="scrollbar"/>
               <param name="window"/>
               <param name="window-frame"/>
               <param name="window-text"/>
            </param>
            <returns type="String">
               <description>
                  <para>- The system color setting in RGB hexadecimal form (#ABCDEF). See the Windows docs for more details.</para>
               </description>
            </returns>
            <description/>
         </method>
         <method name="isInvertedColorScheme">
            <returns type="Boolean">
               <description>
                  <para>- true if an inverted color scheme, such as a high contrast theme, is active, false otherwise.</para>
               </description>
            </returns>
            <description/>
         </method>
      </methods>
   </object>
</file>
